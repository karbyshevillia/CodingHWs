"""
T29.6 –°–∫–ª–∞—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
–ø—Ä–æ –≤–ª–∞—Å–Ω–∏–π —Å–∞–¥. –£ –ë–î –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä—ñ–¥ –¥–µ—Ä–µ–≤ (—è–±–ª—É–Ω—è, –≥—Ä—É—à–∞
—Ç–æ—â–æ), —Å–æ—Ä—Ç –¥–µ—Ä–µ–≤, —Ä—ñ–∫ –ø–æ—Å–∞–¥–∫–∏, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–µ –º—ñ—Å—Ü–µ –ø–æ—Å–∞–¥–∫–∏. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ
–¥–µ—Ä–µ–≤–∞ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å —Ç–∞–∫–æ–∂ –≤—Ä–æ–∂–∞–π –ø–æ —Ä–æ–∫–∞—Ö. –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ–¥–∞–≤–∞–Ω–Ω—è
—Ä–æ–¥—É –¥–µ—Ä–µ–≤, –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–æ—Ä—Ç—É, –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–µ—Ä–µ–≤–∞, –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤—Ä–æ–∂–∞—é –∑–∞ –∑–∞–¥–∞–Ω–∏–π
—Ä—ñ–∫, –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≤—Å—ñ –¥–µ—Ä–µ–≤–∞ –¥–∞–Ω–æ–≥–æ —Ä–æ–¥—É —Ç–∞ –ø—Ä–æ –≤—Ä–æ–∂–∞–π
–∑–∞–¥–∞–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ —Ä–æ–∫—ñ–≤.

–†—ñ–¥_–¥–µ—Ä–µ–≤
    Id_–ö–æ–¥_—Ä–æ–¥—É
    –ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è_—Ä–æ–¥—É
–°–æ—Ä—Ç_–¥–µ—Ä–µ–≤
    Id_—Å–æ—Ä—Ç—É_–¥–µ—Ä–µ–≤–∞
    –ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è_—Å–æ—Ä—Ç—É
–î–µ—Ä–µ–≤–∞
    Id_–¥–µ—Ä–µ–≤–∞
    Id_–ö–æ–¥_—Ä–æ–¥—É
    Id_—Å–æ—Ä—Ç—É_–¥–µ—Ä–µ–≤–∞
–°–∞–¥
    Id_–¥–µ—Ä–µ–≤–∞
    –†—ñ–∫_–ø–æ—Å–∞–¥–∫–∏
    –ú—ñ—Å—Ü–µ_–ø–æ—Å–∞–¥–∫–∏
–í—Ä–æ–∂–∞–π
    Id_–¥–µ—Ä–µ–≤–∞
    –†—ñ–∫
    –í—Ä–æ–∂–∞–π
"""

import sqlite3

DB_NAME = "garden.db"

def init_db():
    with sqlite3.connect(DB_NAME) as conn:
        cursor = conn.cursor()

        cursor.execute('DROP TABLE IF EXISTS Harvest')
        cursor.execute('DROP TABLE IF EXISTS Garden')
        cursor.execute('DROP TABLE IF EXISTS Trees')
        cursor.execute('DROP TABLE IF EXISTS TreeSorts')
        cursor.execute('DROP TABLE IF EXISTS TreeSpecies')

        cursor.execute('''
            CREATE TABLE TreeSpecies (
                species_id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL
            )
        ''')

        cursor.execute('''
            CREATE TABLE TreeSorts (
                sort_id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL
            )
        ''')

        cursor.execute('''
            CREATE TABLE Trees (
                tree_id INTEGER PRIMARY KEY AUTOINCREMENT,
                species_id INTEGER,
                sort_id INTEGER,
                FOREIGN KEY (species_id) REFERENCES TreeSpecies(species_id),
                FOREIGN KEY (sort_id) REFERENCES TreeSorts(sort_id)
            )
        ''')

        cursor.execute('''
            CREATE TABLE Garden (
                tree_id INTEGER PRIMARY KEY,
                year_planted INTEGER,
                location TEXT,
                FOREIGN KEY (tree_id) REFERENCES Trees(tree_id)
            )
        ''')

        cursor.execute('''
            CREATE TABLE Harvest (
                tree_id INTEGER,
                year INTEGER,
                harvest_amount REAL,
                PRIMARY KEY (tree_id, year),
                FOREIGN KEY (tree_id) REFERENCES Trees(tree_id)
            )
        ''')

def add_species():
    name = input("–ù–∞–∑–≤–∞ —Ä–æ–¥—É –¥–µ—Ä–µ–≤: ")
    with sqlite3.connect(DB_NAME) as conn:
        conn.execute("INSERT INTO TreeSpecies (name) VALUES (?)", (name,))
    print("–†—ñ–¥ –¥–µ—Ä–µ–≤ –¥–æ–¥–∞–Ω–æ.")

def add_sort():
    name = input("–ù–∞–∑–≤–∞ —Å–æ—Ä—Ç—É: ")
    with sqlite3.connect(DB_NAME) as conn:
        conn.execute("INSERT INTO TreeSorts (name) VALUES (?)", (name,))
    print("–°–æ—Ä—Ç –¥–µ—Ä–µ–≤ –¥–æ–¥–∞–Ω–æ.")

def add_tree():
    species_id = int(input("ID —Ä–æ–¥—É –¥–µ—Ä–µ–≤: "))
    sort_id = int(input("ID —Å–æ—Ä—Ç—É –¥–µ—Ä–µ–≤: "))
    year_planted = int(input("–†—ñ–∫ –ø–æ—Å–∞–¥–∫–∏: "))
    location = input("–ú—ñ—Å—Ü–µ –ø–æ—Å–∞–¥–∫–∏: ")

    with sqlite3.connect(DB_NAME) as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT INTO Trees (species_id, sort_id) VALUES (?, ?)", (species_id, sort_id))
        tree_id = cursor.lastrowid
        cursor.execute("INSERT INTO Garden (tree_id, year_planted, location) VALUES (?, ?, ?)",
                       (tree_id, year_planted, location))
    print(f"–î–µ—Ä–µ–≤–æ –¥–æ–¥–∞–Ω–æ (ID: {tree_id}).")

def add_harvest():
    tree_id = int(input("ID –¥–µ—Ä–µ–≤–∞: "))
    year = int(input("–†—ñ–∫ –≤—Ä–æ–∂–∞—é: "))
    harvest_amount = float(input("–í—Ä–æ–∂–∞–π (–∫–≥): "))
    with sqlite3.connect(DB_NAME) as conn:
        conn.execute('''
            INSERT OR REPLACE INTO Harvest (tree_id, year, harvest_amount)
            VALUES (?, ?, ?)
        ''', (tree_id, year, harvest_amount))
    print("–í—Ä–æ–∂–∞–π –¥–æ–¥–∞–Ω–æ.")

def list_trees_by_species():
    species_id = int(input("ID —Ä–æ–¥—É –¥–µ—Ä–µ–≤: "))
    with sqlite3.connect(DB_NAME) as conn:
        cursor = conn.cursor()
        cursor.execute('''
            SELECT t.tree_id, s.name, so.name, g.year_planted, g.location
            FROM Trees t
            JOIN TreeSpecies s ON t.species_id = s.species_id
            JOIN TreeSorts so ON t.sort_id = so.sort_id
            JOIN Garden g ON g.tree_id = t.tree_id
            WHERE t.species_id = ?
        ''', (species_id,))
        rows = cursor.fetchall()
        if rows:
            for r in rows:
                print(f"ID –¥–µ—Ä–µ–≤–∞: {r[0]}, –†—ñ–¥: {r[1]}, –°–æ—Ä—Ç: {r[2]}, –ü–æ—Å–∞–¥–∂–µ–Ω–µ: {r[3]}, –ú—ñ—Å—Ü–µ: {r[4]}")
        else:
            print("–î–µ—Ä–µ–≤ —Ü—å–æ–≥–æ —Ä–æ–¥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

def show_harvest_by_years():
    tree_id = int(input("ID –¥–µ—Ä–µ–≤–∞: "))
    start_year = int(input("–ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–∫: "))
    end_year = int(input("–ö—ñ–Ω—Ü–µ–≤–∏–π —Ä—ñ–∫: "))

    with sqlite3.connect(DB_NAME) as conn:
        cursor = conn.cursor()
        cursor.execute('''
            SELECT year, harvest_amount
            FROM Harvest
            WHERE tree_id = ? AND year BETWEEN ? AND ?
            ORDER BY year
        ''', (tree_id, start_year, end_year))
        rows = cursor.fetchall()
        if rows:
            for r in rows:
                print(f"–†—ñ–∫: {r[0]}, –í—Ä–æ–∂–∞–π: {r[1]} –∫–≥")
        else:
            print("–î–∞–Ω–∏—Ö –ø—Ä–æ –≤—Ä–æ–∂–∞–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

def main():
    init_db()
    while True:
        print("\nüå≥ –ú–µ–Ω—é:")
        print("1. –î–æ–¥–∞—Ç–∏ —Ä—ñ–¥ –¥–µ—Ä–µ–≤")
        print("2. –î–æ–¥–∞—Ç–∏ —Å–æ—Ä—Ç –¥–µ—Ä–µ–≤")
        print("3. –î–æ–¥–∞—Ç–∏ –¥–µ—Ä–µ–≤–æ")
        print("4. –î–æ–¥–∞—Ç–∏ –≤—Ä–æ–∂–∞–π")
        print("5. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –¥–µ—Ä–µ–≤–∞ –∑–∞ —Ä–æ–¥–æ–º")
        print("6. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Ä–æ–∂–∞–π –∑–∞ –ø–µ—Ä—ñ–æ–¥ —Ä–æ–∫—ñ–≤")
        print("0. –í–∏–π—Ç–∏")
        choice = input("–í–∞—à –≤–∏–±—ñ—Ä: ")

        if choice == '1':
            add_species()
        elif choice == '2':
            add_sort()
        elif choice == '3':
            add_tree()
        elif choice == '4':
            add_harvest()
        elif choice == '5':
            list_trees_by_species()
        elif choice == '6':
            show_harvest_by_years()
        elif choice == '0':
            break
        else:
            print("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä.")

if __name__ == '__main__':
    main()
